name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Images
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile.prod
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/doctors-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile.prod
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/doctors-frontend:latest
          build-args: |
            VITE_API_URL=http://169.255.58.102/api
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy to VPS
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            cd /opt/doctors_workspace
            
            echo "=== Pulling latest code ==="
            git pull origin main
            
            echo "=== Logging in to GitHub Container Registry ==="
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            echo "=== Stopping containers ==="
            docker compose -f docker-compose.ghcr.yml down
            
            echo "=== Pulling latest images ==="
            docker compose -f docker-compose.ghcr.yml pull
            
            echo "=== Starting containers ==="
            docker compose -f docker-compose.ghcr.yml up -d
            
            echo "=== Waiting for services to start ==="
            sleep 15
            
            echo "=== Checking container status ==="
            docker compose -f docker-compose.ghcr.yml ps
            
            echo "=== Deployment completed successfully ==="
      
      - name: Deployment Status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Deployment successful"
          else
            echo "❌ Deployment failed"
          fi

