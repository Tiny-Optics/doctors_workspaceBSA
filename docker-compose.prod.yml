services:
  # MongoDB Database
  mongodb:
    image: mongo:latest
    container_name: bloodsa_mongodb_prod
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${BLUEPRINT_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${BLUEPRINT_DB_ROOT_PASSWORD}
    ports:
      - "${BLUEPRINT_DB_PORT:-27017}:27017"
    volumes:
      - mongo_data_prod:/data/db
    networks:
      - bloodsa_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API (Go - Production Build)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bloodsa_backend_prod
    restart: always
    ports:
      - "${PORT:-8080}:8080"
    environment:
      - PORT=${PORT:-8080}
      - APP_ENV=production
      - BLUEPRINT_DB_HOST=mongodb
      - BLUEPRINT_DB_PORT=27017
      - BLUEPRINT_DB_USERNAME=${BLUEPRINT_DB_USERNAME}
      - BLUEPRINT_DB_ROOT_PASSWORD=${BLUEPRINT_DB_ROOT_PASSWORD}
    networks:
      - bloodsa_network
    depends_on:
      mongodb:
        condition: service_healthy

  # Frontend (Vue.js - Production Build with Nginx)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bloodsa_frontend_prod
    restart: always
    ports:
      - "80:80"
    networks:
      - bloodsa_network
    depends_on:
      - backend

networks:
  bloodsa_network:
    driver: bridge

volumes:
  mongo_data_prod:
    driver: local


