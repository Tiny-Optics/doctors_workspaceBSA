version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: bloodsa_mongodb_prod
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${BLUEPRINT_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${BLUEPRINT_DB_ROOT_PASSWORD}
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
    networks:
      - bloodsa_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1536M
        reservations:
          cpus: '0.5'
          memory: 1024M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Backend API (Go)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: bloodsa_backend_prod
    restart: always
    environment:
      - PORT=8080
      - APP_ENV=production
      - GIN_MODE=release
      - BLUEPRINT_DB_HOST=mongodb
      - BLUEPRINT_DB_PORT=27017
      - BLUEPRINT_DB_USERNAME=${BLUEPRINT_DB_USERNAME}
      - BLUEPRINT_DB_ROOT_PASSWORD=${BLUEPRINT_DB_ROOT_PASSWORD}
      - BLUEPRINT_DB_DATABASE=${BLUEPRINT_DB_DATABASE:-doctors_workspace}
      - JWT_SECRET=${JWT_SECRET}
      - DROPBOX_APP_API_ACCESS_TOKEN=${DROPBOX_APP_API_ACCESS_TOKEN}
      - DROPBOX_APP_KEY=${DROPBOX_APP_KEY}
      - DROPBOX_APP_SECRET=${DROPBOX_APP_SECRET}
      - DROPBOX_APP_PARENT_FOLDER=${DROPBOX_APP_PARENT_FOLDER}
    volumes:
      - sop_uploads:/app/uploads
    networks:
      - bloodsa_network
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
        reservations:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Frontend (Vue.js with Nginx)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        - VITE_API_URL=${VITE_API_URL:-http://localhost:8080}
    container_name: bloodsa_frontend_prod
    restart: always
    networks:
      - bloodsa_network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: bloodsa_nginx_prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    networks:
      - bloodsa_network
    depends_on:
      - frontend
      - backend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  bloodsa_network:
    driver: bridge

volumes:
  mongo_data:
    driver: local
  mongo_config:
    driver: local
  sop_uploads:
    driver: local
